### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Answer {
  answer: String!
  id: Int!
  question: Question
}

type AuthPayload {
  token: String!
  user: User!
}

type Mutation {
  deleteAnswer(id: Int!): Answer
  deleteQuestion(id: Int!): Question
  deleteUser(id: Int!): User!
  login(email: String!, password: String!): AuthPayload!
  postAnswer(answer: String!, id: Int!): Answer!
  postQuestion(correctAnswer: String!, question: String!, weight: String!): Question!
  registerUser(email: String!, name: String!, password: String!): AuthPayload!
  updateAnswer(answer: String!, id: Int!): Answer
  updateQuestion(correctAnswer: String!, id: Int!, question: String!, weight: String!): Question
  updateUser(email: String!, id: Int!, name: String!): User!
}

type Query {
  allAnswers: [Answer!]!
  allQuestions: [Question!]!
  allUsers: [User!]!
  getOneUser(id: Int!): User
  getSingleQuestion(id: Int!): Question
  readAnswer(id: Int!): Answer
}

type Question {
  answers: [Answer!]!
  correctAnswer: String!
  id: Int!
  postedBy: User
  question: String!
  weight: String!
}

type User {
  QuestionsAsked: [Question!]!
  email: String!
  id: Int!
  name: String!
}